public String simplifyPath(String path) {
        int n = path.length();
        
        Stack<Character> st = new Stack<>();
        int count=0;
        
        for(int i=0; i<n; i++){
            char ch = path.charAt(i);
            
            if((ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90)){
                if(st.size() !=0 && (st.peek() == '/' || st.peek() == '.'))
                    st.push('*');
            }else if(ch == '/'){
                if(st.size() !=0 && st.peek() == '.' && count == 2){
                    while(st.size() != 0 && st.peek() != '*') st.pop();
                }
                    while(st.size() !=0 && (st.peek() == '/' || (st.peek() == '.' && count <= 2) || st.peek() == '*'))
                        st.pop();
                count=0;
            }else if(ch == '.')
                count++;
    
            st.push(ch);
        }
        
        if(st.peek() == '.' && count == 2){
            while(st.size() != 0 && st.peek() != '*') st.pop();
            count=0;
        }
        
        StringBuilder sb = new StringBuilder();

        while(st.size() > 0){
            if(st.peek() != '*' )
                sb.append(st.peek());
            st.pop();
        }
        
        sb.reverse();
        
        if(sb.length() >0 && sb.charAt(sb.length()-1) == '.' && count==1) sb.delete(sb.length()-1, sb.length());
        if(sb.length() >0 && sb.charAt(sb.length()-1) == '/')sb.delete(sb.length()-1, sb.length());
        
        if(sb.length() == 0) sb.append('/');
        return sb.toString();
    }
