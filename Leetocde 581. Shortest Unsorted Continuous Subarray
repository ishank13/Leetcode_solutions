//Approach -> mark the first fluctuation from start and end. Then verify this range if its true range or not. Then take the difference if 2 pointers

public int findUnsortedSubarray(int[] nums) {
        int n = nums.length;
        int a=-1, b=-1;
        int curr = 1;
        int prev=0;
        
        while(curr < n){
            if(nums[prev] > nums[curr]){
                a = prev;
                break;
            }
            prev = curr;
            curr++;
        }
        
        curr = n-2;
        prev = n-1;
        while(curr >= 0){
            if(nums[prev] < nums[curr]){
                b = prev;
                break;
            }
            prev = curr;
            curr--;
        }
        
        if(a==-1) return 0;
        
        int min = (int)1e9;
        int max = -(int)1e9;
        
        int i = a;
        while(i <= b){
            min = Math.min(min, nums[i]);
            max = Math.max(max, nums[i]);
            i++;
        }
        
        i=0;
        while(i < a){
            if(nums[i] == nums[a] || nums[i] > min){
                a = i;
                break;
            }
            i++;
        }
        
        i=n-1;
        while(i > b){
            if(nums[i] == nums[b] || nums[i] < max){
                b = i;
                break;
            }
            i--;
        }
        
        return b-a + 1;
    }
