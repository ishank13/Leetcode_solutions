// Approach -> longest increasing subsequence (LIS) technique.
// sort the 2d array on the basis of 0th index and apply LIS technique on 1th index.  

public int maxEnvelopes(int[][] arr) {
        if(arr.length == 0) return 0;

        Arrays.sort(arr, (a,b)->{
            if(a[0] == b[0]) return b[1] - a[1];
            return a[0] - b[0];   // sort on 0th index
        });

        int n = arr.length;
        int[] dp = new int[n];
        int ans = 0;

        for(int i=0; i<n; i++){
            dp[i] = 1;
            for(int j = i-1; j >= 0; j--){
                if(arr[j][1] < arr[i][1])
                    dp[i] = Math.max(dp[i], dp[j]+1);
            }
            ans = Math.max(ans, dp[i]);
        }        
        return ans;
    }
