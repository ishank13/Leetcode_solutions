//Approach -> binary search row wise

  public boolean searchMatrix(int[][] matrix, int target) {
        int n = matrix.length;
        int m = matrix[0].length;
        
        boolean ans = false;
        for(int i=0; i<n; i++){
            if(matrix[i][0] <= target && matrix[i][m-1] >= target)
                ans = ans || helper(matrix, target, i);
        }
        return ans;
    }
    
    public boolean helper(int[][] matrix, int target, int i){
        int m = matrix[0].length;
        int l = i*m + 0;
        int r = i*m + (m-1);
        
        while(l <= r){
            int mid = (l+r)/2;
            if(matrix[mid/m][mid%m] == target) return true;
            else if(matrix[mid/m][mid%m] > target) r = mid-1;
            else l= mid+1;
        }
        return false;
    }
