// Approach -> putting all elements in array
// while traversing over hashmap, we get unique keys,  
// and to satisfy Harmonious condition it is only possible if we sum value of key+1 or key+2 with value of key. 
// Hence we continously taking max and we get the maximum length
// /There is no need to check for key-1, as it is already been checked, we can check for only key and key+1.


public int findLHS(int[] nums) {
        
        HashMap<Integer, Integer> map = new HashMap<>();
        
        for(int ele : nums)
            map.put(ele, map.getOrDefault(ele, 0) + 1);
        
        int max = 0;
        for(int key : map.keySet()){
            if(map.containsKey(key+1))
                max = Math.max(max, map.get(key) + map.get(key+1));
        }
        
        return max;
    }
