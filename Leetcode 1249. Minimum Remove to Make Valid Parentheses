//Aproach-> make a stack and put only open brackets in it and when close brackets come, simply pop out from stack and if stack.size() == 0 then mark that index i.e. extra paranthesis
// and at last traverse over the string and add only characters whose indexes are not marked

  public String minRemoveToMakeValid(String s) {
        
        Stack<Integer> st = new Stack();
        int n = s.length();
        int[] vis = new int[n];
        
        for(int i=0; i<n; i++){
            if(s.charAt(i) == '(')
                st.push(i);
            else if(s.charAt(i) == ')'){
                if(st.size() != 0 && s.charAt(st.peek()) == '(')
                    st.pop();
                else
                    vis[i] = '#';
            }
        }
        while(st.size() != 0){
            vis[st.peek()] = '#';
            st.pop();
        }
        
        String ans = "";
        for(int i=0; i<n; i++){
            if(vis[i] != '#')
                ans += s.charAt(i);
        }
        return ans;
    }
